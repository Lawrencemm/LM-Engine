name: Build and test

on: push

jobs:

  linux:
    timeout-minutes: 20

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: Get system dependencies
        run: sudo apt-get update && sudo apt-get install -y
          libwayland-dev
          libx11-xcb-dev
          libxcb-randr0-dev
          libxcb-util0-dev
          pkg-config
          libgtkmm-3.0-dev libfontenc-dev libxaw7-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev
      - name: Get Conan
        run: pip install conan
      - name: Setup Conan
        run: conan profile detect
      - name: Conan install
        env:
          CC: gcc-10
          CXX: g++-10
        run: mkdir build &&
          conan install .
          -of build
          --build missing
          -s build_type=${{ matrix.configuration }}
      - name: Configure
        env:
          CC: gcc-10
          CXX: g++-10
        run: cd build && cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ..
      - name: Build
        run: cmake --build build -j $(nproc --all)
      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest

  windows:
    timeout-minutes: 20

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - uses: ilammy/msvc-dev-cmd@v1.5.0
      - name: Get Conan
        run: pip install conan
      - name: Setup Conan
        run: conan profile detect
      - name: Conan install
        run: mkdir build &&
          conan install .
          -of build
          --build missing
          -s build_type=${{ matrix.configuration }}
      - name: Configure
        env:
          CC: cl
          CXX: cl
        run: cd build &&
          cmake
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          ..
      - name: Build
        run: cmake --build build -j $(nproc --all)
      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest