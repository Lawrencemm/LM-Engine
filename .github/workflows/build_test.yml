name: Build and test

on: push

jobs:

  linux:
    timeout-minutes: 20

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}
          max-size: 100M
      - name: Get system dependencies
        run: sudo apt-get update && sudo apt-get install -y
          libwayland-dev
          libx11-xcb-dev
          libxcb-randr0-dev
          libxcb-util0-dev
          pkg-config
          libgtkmm-3.0-dev
      - name: Get Conan
        run: pip install conan &&
          conan profile new default --detect &&
          conan profile update settings.compiler.libcxx=libstdc++11 default &&
          conan profile update settings.compiler.version=8 default
      - name: Add remotes to Conan
        run: conan config install conan/config/common
      - name: Conan install
        env:
          CC: gcc-10
          CXX: g++-10
        run: mkdir build &&
          conan install .
          -if build
          --build missing
          -s build_type=${{ matrix.configuration }}
      - name: Configure
        env:
          CC: gcc-10
          CXX: g++-10
        run: cd build && 
          cmake 
          -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} 
          -DCMAKE_C_COMPILER_LAUNCHER=ccache 
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache 
          ..
      - name: Build
        run: cmake --build build -j $(nproc --all)
      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest

  windows:
    timeout-minutes: 20

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}
          max-size: 100M
      - uses: actions/setup-python@v1
      - uses: ilammy/msvc-dev-cmd@v1.5.0
      - name: Get Conan
        run: pip install conan && conan profile new default --detect
      - name: Add remotes to Conan
        run: conan config install conan/config/common
      - name: Conan install
        run: mkdir build &&
          conan config set general.parallel_download=8 &&
          conan install .
          -if build
          --build missing
          -s build_type=${{ matrix.configuration }}
      - name: Configure
        env:
          CC: cl
          CXX: cl
        run: cd build &&
          cmake
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          -DCMAKE_C_COMPILER_LAUNCHER=ccache 
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          ..
      - name: Build
        run: cmake --build build -j $(nproc --all)
      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest